apply plugin: 'com.android.application'

android {
    def config = rootProject.ext
    compileSdkVersion config["androidCompileSdkVersion"]
    buildToolsVersion config["androidBuildToolsVersion"]

    defaultConfig {
        minSdkVersion config["androidMinSdkVersion"]
        targetSdkVersion config["androidTargetSdkVersion"]

        applicationId config["applicationId"]
        versionCode config["versionCode"]
        versionName config["versionName"]
        testInstrumentationRunner config["testInstrumentationRunner"]
        testApplicationId config["testApplicationId"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':domain')
    implementation project(path: ':data')

    def globalDependencies = rootProject.ext.globalDependencies
    implementation globalDependencies["androidSupportAppcompat"]
    implementation globalDependencies["androidSupportDesign"]
    implementation globalDependencies["androidSupportRecyclerView"]
    implementation globalDependencies["androidSupportCardView"]
    implementation globalDependencies["androidConstraintLayout"]
    implementation globalDependencies["androidArchRoom"]
    implementation globalDependencies["dagger"]
    implementation globalDependencies["renderers"]
    implementation globalDependencies["butterKnife"]
    implementation globalDependencies["rxJava"]
    implementation globalDependencies["rxAndroid"]

    annotationProcessor globalDependencies["daggerCompiler"]
    annotationProcessor globalDependencies["butterKnifeCompiler"]
    annotationProcessor globalDependencies["androidArchRoomCompiler"]

    def developmentDependencies = rootProject.ext.developmentDependencies
    implementation developmentDependencies["leakCanary"]

    def testDependencies = rootProject.ext.testDependencies
    testImplementation testDependencies["junit"]
    testImplementation testDependencies["assertj"]
    testImplementation testDependencies["robolectric"]
    testImplementation testDependencies["mockito"]
    androidTestImplementation testDependencies["testRunner"]
    androidTestImplementation testDependencies["espressoCore"]
}
